MyGenericType<|T|> :: struct {
    non_generic_member: u32
    generic_member: T
}

DeGenericized :: MyGenericType<|i64|>

fn main() {
    hello :: MyGenericType<|i64|> {
        non_generic_member: 54
        generic_member: 4
    }

    hello :: MyGenericType {
        non_generic_member: 54
        generic_member: 4 as u32
    }

    //None of these things work yet:
    // hello.generic_member += 5
    // hello :: DeGenericized { non_generic_member: 54, generic_member: 4 }
    // print_type_of(hello.generic_member)
}

fn print_type_of<|T|>(val: T) {
    print_type(T)
}