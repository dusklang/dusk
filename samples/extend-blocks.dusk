MyStruct :: struct {}

extend MyStruct {
    fn new(): MyStruct {
        MyStruct {}
    }

    fn do_something_truly_amazing_with_copy(self) {
        print("Doing something amazing with a copy of self\n")
    }

    fn do_something_truly_amazing_with_immutable_pointer(self*) {
        print("Doing something amazing with an immutable pointer to self\n")
    }

    fn do_something_truly_amazing_with_mutable_pointer(self *mut) {
        print("Doing something amazing with a mutable pointer to self\n")
    }

    fn do_something_normal_and_not_amazing_at_all() {
        print("Doing something really normal\n")
    }
}

fn main() {
    MyStruct.do_something_normal_and_not_amazing_at_all()

    value := MyStruct.new()
    MyStruct.do_something_truly_amazing_with_copy(value)
    MyStruct.do_something_truly_amazing_with_immutable_pointer(&value)
    MyStruct.do_something_truly_amazing_with_mutable_pointer(&mut value)

    value.do_something_truly_amazing_with_copy()
    value.do_something_truly_amazing_with_immutable_pointer()
    value.do_something_truly_amazing_with_mutable_pointer()
}
