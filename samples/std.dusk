fn assert(condition: bool) {
    if !condition { panic("assertion failed") }
}

fn memcpy<|T|>(dest: T *mut, src: T*, count: usize) {
    cur_dest := dest
    end_dest :: (dest as usize + size_of(T) * count) as T *mut

    cur_src := src
    while cur_dest as usize != end_dest as usize {
        *cur_dest = *cur_src
        cur_dest = (cur_dest as usize + size_of(T)) as T *mut
        cur_src = (cur_src as usize + size_of(T)) as T*
    }
}

fn print_num(num: i32) {
    num := num
    if num < 0 {
        print("-")
        num = -num
    }
    if num >= 10 {
        print_num(num / 10)
    }
    print((num % 10) as u8 + "0")
}

str :: mod {
    fn len(str: u8*): usize {
        str := str
        darba := str
        derpa := darba
        len: usize = 0
        while *((str as usize + len) as u8*) != 0 {
            len = len + 1
        }
        len
    }

    fn concat(a: u8*, b: u8*): u8* {
        len :: len(a) + len(b)
        buf := malloc(len + 1) as u8 *mut
        ret_val :: buf
        a := a
        while *a != 0 {
            *buf = *a
            a = (a as usize + 1) as u8*
            buf = (buf as usize + 1) as u8 *mut
        }
        b := b
        while *b != 0 {
            *buf = *b
            b = (b as usize + 1) as u8*
            buf = (buf as usize + 1) as u8 *mut
        }
        *buf = 0
        ret_val
    }
}

io :: mod {
    windows :: import("windows.dusk")
    fn print(msg: i8*) {
        stdout :: windows.kernel32.GetStdHandle(windows.STD_OUTPUT_HANDLE)
        if stdout == windows.INVALID_HANDLE_VALUE() { return }

        total_printed := 0 as windows.DWORD
        length :: str.len(msg as u8*) as windows.DWORD
        while total_printed < length {
            printed := 0 as windows.DWORD
            succ :: windows.kernel32.WriteConsoleA(stdout, (msg as usize + total_printed) as void*, length - total_printed, &mut printed, windows.NULL())
            if succ == 0 { return }

            total_printed = total_printed + printed
        }
    }
}

fn main() {
    io.print("hi, there!")
}