Foo :: struct {
    a: i32
    b: u64
    c: u8*
    d: struct {
        e: f32
        f: f64
    }
}

fn make_foo(): Foo {
    foo_ptr :: malloc(size_of(Foo)) as Foo *mut
    foo :: *foo_ptr
    free(foo_ptr as void *mut)

    foo
}

std :: import("std.meda")

fn print_foo(foo: Foo) {
    print("foo = Foo { a: ")
    std.print_num(foo.a)
    print(", b: ")
    std.print_num(foo.b as i32)
    print(", c: \"")
    print(foo.c)
    print("\", d: { e: ")
    std.print_num(foo.d.e as i32)
    print(", f: ")
    std.print_num(foo.d.f as i32)
    print(" } }\n")
}

fn main() {
    internal_struct :: struct {
        foo: Foo
        bar: struct { a: bool, b: u32 }
        baz: i32
    }

    foo := make_foo()
    foo.a = 24
    foo.b = 782
    foo.c = "Hello, world!"
    // Issue #82
    foo.d.e = 6.5 as f32
    foo.d.f = 12

    print_foo(foo)

    print_type(internal_struct)
}